public class Try {
    private static void p(Object... objs) {
        Printer.p(objs);
    }

    private static void tryThenExit() {
        p("\\x27", (char) Integer.parseInt("EF", 16));

        System.exit(1);
    }

    public static void main(String[] args) {
        // tryThenExit();

        String working = "1113222113";
        for (int i = 0; i < 50; i++) {
            working = expand(working);
        }
        p(working.length());
    }
    
    // 1 becomes 11 (1 copy of digit 1).
    // 11 becomes 21 (2 copies of digit 1).
    // 21 becomes 1211 (one 2 followed by one 1).
    // 1211 becomes 111221 (one 1, one 2, and two 1s).
    // 111221 becomes 312211 (three 1s, two 2s, and one 1).
    // 312211 becomes 13112221 (one 3, one 1, one 2, and two 1s). 

    // Auto-generated by Copilot:
    public static String expand(String input) {
        StringBuilder output = new StringBuilder();

        int count = 1;
        char last = input.charAt(0);

        for (int i = 1; i < input.length(); i++) {
            char current = input.charAt(i);

            if (last == current) {
                count++;
            } else {
                output.append(count);
                output.append(last);

                count = 1;
                last = current;
            }
        }

        output.append(count);
        output.append(last);

        return output.toString();
    }    
}
